{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List\/elements"},"hierarchy":{"paths":[["doc:\/\/amplify-swift.Amplify\/documentation\/Amplify","doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List"]]},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"Amplify"}],"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"elements","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7Amplify4ListC7Elementa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"role":"symbol","roleHeading":"Instance Property","title":"elements","externalID":"s:7Amplify4ListC8elementsSayxGvp"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/amplify\/list\/elements"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"elements","kind":"identifier"},{"kind":"text","text":": ["},{"identifier":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List\/Element","preciseIdentifier":"s:7Amplify4ListC7Elementa","kind":"typeIdentifier","text":"Element"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Attempting to access the list object will attempt to retrieve the elements in memory or retrieve it from the"},{"text":" ","type":"text"},{"text":"provider’s data source. This is not thread safe as it can be performed from multiple threads, however the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provider’s call to "},{"code":"load","type":"codeVoice"},{"text":" should be idempotent and should result in the final loaded state. An attempt to set","type":"text"},{"text":" ","type":"text"},{"text":"this again will result in no-op and will not overwrite the existing loaded data.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"The array of ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" that backs the custom collection implementation.","type":"text"}],"references":{"doc://amplify-swift.Amplify/documentation/Amplify/List/elements":{"abstract":[{"text":"The array of ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" that backs the custom collection implementation.","type":"text"}],"title":"elements","identifier":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List\/elements","url":"\/documentation\/amplify\/list\/elements","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"elements","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:7Amplify4ListC7Elementa"},{"text":"]","kind":"text"}]},"doc://amplify-swift.Amplify/documentation/Amplify/List":{"title":"List","kind":"symbol","abstract":[{"type":"codeVoice","code":"List<ModelType>"},{"type":"text","text":" is a custom "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" that is capable of loading records from a data source. This is especially"},{"text":" ","type":"text"},{"type":"text","text":"useful when dealing with Model associations that need to be lazy loaded. Lazy loading is performed when you access"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" methods by retrieving the data from the underlying data source and then stored into this object,"},{"type":"text","text":" "},{"type":"text","text":"before returning the data to you. Consumers must be aware that multiple calls to the data source and then stored"},{"type":"text","text":" "},{"type":"text","text":"into this object will happen simultaneously if the object is used from different threads, thus not thread safe."},{"text":" ","type":"text"},{"type":"text","text":"Lazy loading is idempotent and will return the stored results on subsequent access."}],"url":"\/documentation\/amplify\/list","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"List","kind":"identifier"}],"identifier":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List","navigatorTitle":[{"text":"List","kind":"identifier"}],"type":"topic"},"doc://amplify-swift.Amplify/documentation/Amplify/List/Element":{"abstract":[],"title":"List.Element","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify\/List\/Element","url":"\/documentation\/amplify\/list\/element","navigatorTitle":[{"kind":"identifier","text":"Element"}]},"doc://amplify-swift.Amplify/documentation/Amplify":{"url":"\/documentation\/amplify","type":"topic","title":"Amplify","role":"collection","identifier":"doc:\/\/amplify-swift.Amplify\/documentation\/Amplify","kind":"symbol","abstract":[]}}}